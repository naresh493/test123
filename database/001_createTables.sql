DROP TABLE IF EXISTS LICENSE;
DROP TABLE IF EXISTS MODULE;
DROP TABLE IF EXISTS TENANT;
DROP TABLE IF EXISTS PROJECT;
DROP TABLE IF EXISTS USER;
DROP TABLE IF EXISTS ROLE;
DROP TABLE IF EXISTS USER_PROJECT;
DROP TABLE IF EXISTS USER_TENANT;
DROP TABLE IF EXISTS USER_ROLE;
DROP TABLE IF EXISTS USER_TEAM;
DROP TABLE IF EXISTS PERMISSIONS;
DROP TABLE IF EXISTS USER_PERMISSIONS;
DROP TABLE IF EXISTS PROJECT_LICENSEAUTH;
DROP TABLE IF EXISTS PROJECT_LICENSE;
DROP TABLE IF EXISTS PROJECT_TENANT;
DROP TABLE IF EXISTS MODULE_LICENSE;
DROP TABLE IF EXISTS LICENSEAUTH;
DROP TABLE IF EXISTS LICENSEAUTH_MAPPING;
DROP TABLE IF EXISTS LICENSEAUTH_PERMISSIONS;
DROP TABLE IF EXISTS AUDIT_RECORD;
DROP TABLE IF EXISTS TEAM;
DROP TABLE IF EXISTS TESTCASE;
DROP TABLE IF EXISTS TESTSUITE;
DROP TABLE IF EXISTS TASKEXECUTION;
DROP TABLE IF EXISTS ROLE_LICENSEAUTH;
DROP TABLE IF EXISTS TEAM_PROJECT;

CREATE TABLE LICENSE
(
	ID INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	NAME VARCHAR(100) NOT NULL,
	IS_DISABLED TINYINT NOT NULL,
	CREATED_BY VARCHAR(50) NOT NULL,
	CREATED_DATE DATETIME NOT NULL,
	MODIFIED_BY VARCHAR(50),
	MODIFIED_DATE DATETIME,
	PRIMARY KEY(ID)
);


CREATE TABLE MODULE
(
	ID INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	NAME VARCHAR(100) NOT NULL,
	IS_DISABLED TINYINT NOT NULL,
	CREATED_BY VARCHAR(50) NOT NULL,
	CREATED_DATE DATETIME NOT NULL,
	MODIFIED_BY VARCHAR(50),
	MODIFIED_DATE DATETIME,
	PRIMARY KEY(ID)
);


CREATE TABLE TENANT
(
	ID INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	NAME VARCHAR(100) NOT NULL,
	IS_DISABLED TINYINT NOT NULL,
	CREATED_BY VARCHAR(50) NOT NULL,
	CREATED_DATE DATETIME NOT NULL,
	MODIFIED_BY VARCHAR(50),
	MODIFIED_DATE DATETIME,
	PRIMARY KEY (ID)
);

CREATE TABLE PROJECT
(
	ID INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	NAME VARCHAR(100) NOT NULL,
	START_DATE DATE NOT NULL,
	END_DATE DATE NOT NULL,
	CONCURRENT_USERS INTEGER NOT NULL,
	IS_DISABLED TINYINT NOT NULL,
	CREATED_BY VARCHAR(50) NOT NULL,
	CREATED_DATE DATETIME NOT NULL,
	MODIFIED_BY VARCHAR(50),
	MODIFIED_DATE DATETIME,
	PRIMARY KEY (ID)
);

CREATE TABLE USER
(
	ID INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	USERID VARCHAR(50),
	FIRST_NAME VARCHAR(50) NOT NULL,
	SUR_NAME VARCHAR(50) NOT NULL,
	EMAIL_ADDRESS VARCHAR(100) NOT NULL,
	LANDLINE VARCHAR(50),
	USERNAME VARCHAR(40),
	MOBILE VARCHAR(50),
	PASSWORD VARCHAR(15),
	IS_DISABLED TINYINT NOT NULL,	
	CREATED_BY VARCHAR(50) NOT NULL,
	CREATED_DATE DATETIME NOT NULL,
	MODIFIED_BY VARCHAR(50),
	MODIFIED_DATE DATETIME,
	TENANT_NAME VARCHAR(50),
	IS_PASSWORD_CHANGE_REQUIRED TINYINT,
	IMPORTED_FROM_LDAP TINYINT,
	PRIMARY KEY (ID)
);



CREATE TABLE ROLE
(
	ID INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	NAME VARCHAR(100) NOT NULL,
	CREATED_BY VARCHAR(50) NOT NULL,
	DESCRIPTION VARCHAR(100),
	CREATED_DATE DATETIME NOT NULL,
	MODIFIED_BY VARCHAR(50),
	MODIFIED_DATE DATETIME,
	PRIMARY KEY (ID)
);

CREATE TABLE PROJECT_MODULE
(
	PROJECT_ID INTEGER NOT NULL,
	MODULE_ID INTEGER NOT NULL,
	CREATED_BY VARCHAR(50) NOT NULL,
	CREATED_DATE DATETIME NOT NULL,
	MODIFIED_BY VARCHAR(50),
	MODIFIED_DATE DATETIME,
	PRIMARY KEY (PROJECT_ID, MODULE_ID)
);

CREATE TABLE TEAM_PROJECT
(
	TEAM_ID INTEGER NOT NULL,
	PROJECT_ID INTEGER NOT NULL,
	CREATED_BY VARCHAR(50) NOT NULL,
	CREATED_DATE DATETIME NOT NULL,
	MODIFIED_BY VARCHAR(50),
	MODIFIED_DATE DATETIME,
	PRIMARY KEY (TEAM_ID, PROJECT_ID)
);

CREATE TABLE USER_PROJECT
(
	USER_ID INTEGER NOT NULL,
	PROJECT_ID INTEGER NOT NULL,
	CREATED_BY VARCHAR(50) NOT NULL,
	CREATED_DATE DATETIME NOT NULL,
	MODIFIED_BY VARCHAR(50),
	MODIFIED_DATE DATETIME,
	PRIMARY KEY (USER_ID, PROJECT_ID)
);
CREATE TABLE ROLE_LICENSEAUTH
(
	ROLE_ID INTEGER NOT NULL,
	LICENSEAUTH_ID INTEGER NOT NULL,
	CREATED_BY VARCHAR(50) NOT NULL,
	CREATED_DATE DATETIME NOT NULL,
	MODIFIED_BY VARCHAR(50),
	MODIFIED_DATE DATETIME,
	PRIMARY KEY (ROLE_ID, LICENSEAUTH_ID)
);
CREATE TABLE USER_TENANT
(
	USER_ID INTEGER NOT NULL,
	TENANT_ID INTEGER NOT NULL,
	CREATED_BY VARCHAR(50) NOT NULL,
	CREATED_DATE DATETIME NOT NULL,
	MODIFIED_BY VARCHAR(50),
	MODIFIED_DATE DATETIME,
	PRIMARY KEY (USER_ID, TENANT_ID)
);

CREATE TABLE USER_ROLE
(
	USER_ID INTEGER NOT NULL,
	ROLE_ID INTEGER NOT NULL,
	CREATED_BY VARCHAR(50) NOT NULL,
	CREATED_DATE DATETIME NOT NULL,
	MODIFIED_BY VARCHAR(50),
	MODIFIED_DATE DATETIME,
	PRIMARY KEY(USER_ID, ROLE_ID)
	
);

CREATE TABLE USER_TEAM
(
	USER_ID INTEGER NOT NULL,
	TEAM_ID INTEGER NOT NULL,
	CREATED_BY VARCHAR(50) NOT NULL,
	CREATED_DATE DATETIME NOT NULL,
	MODIFIED_BY VARCHAR(50),
	MODIFIED_DATE DATETIME,
	PRIMARY KEY (USER_ID, TEAM_ID)
);

CREATE TABLE PERMISSIONS
(
	ID INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	NAME VARCHAR(250) NOT NULL,
	ROLE_ID INTEGER NOT NULL,
	CREATED_BY VARCHAR(50) NOT NULL,
	CREATED_DATE DATETIME NOT NULL,
	MODIFIED_BY VARCHAR(50),
	MODIFIED_DATE DATETIME,
	PRIMARY KEY(ID)
);

CREATE TABLE USER_PERMISSIONS
(
	USER_ID INTEGER NOT NULL,
	PERMISSION_ID INTEGER NOT NULL,
	CREATED_BY VARCHAR(50) NOT NULL,
	CREATED_DATE DATETIME NOT NULL,
	MODIFIED_BY VARCHAR(50),
	MODIFIED_DATE DATETIME
);

CREATE TABLE PROJECT_LICENSEAUTH
(
	PROJECT_ID INTEGER NOT NULL,
	MODULE_ID VARCHAR(50) NULL,
	LICENSE_ID VARCHAR(50) NULL,
	LICENSEAUTH_ID VARCHAR(50) NULL,
	CREATED_BY VARCHAR(50) NOT NULL,
	CREATED_DATE DATETIME NOT NULL,
	MODIFIED_BY VARCHAR(50),
	MODIFIED_DATE DATETIME,
	PRIMARY KEY (PROJECT_ID)
);

CREATE TABLE PROJECT_LICENSE
(
	PROJECT_ID INTEGER NOT NULL,
	LICENSEAUTH_ID INTEGER NOT NULL,
	NO_OF_ALLOWED_USERS INTEGER,
	CREATED_BY VARCHAR(50) NOT NULL,
	CREATED_DATE DATETIME NOT NULL,
	MODIFIED_BY VARCHAR(50),
	MODIFIED_DATE DATETIME,
	PRIMARY KEY (PROJECT_ID, LICENSEAUTH_ID)
);

CREATE TABLE PROJECT_TENANT
(
	PROJECT_ID INTEGER NOT NULL,
	TENANT_ID INTEGER NOT NULL,
	CREATED_BY VARCHAR(50) NOT NULL,
	CREATED_DATE DATETIME NOT NULL,
	MODIFIED_BY VARCHAR(50),
	MODIFIED_DATE DATETIME,
	PRIMARY KEY (PROJECT_ID, TENANT_ID)
);

CREATE TABLE MODULE_LICENSE
(
	MODULE_ID INTEGER NOT NULL,
	LICENSE_ID INTEGER NOT NULL,
	ROLE_ID INTEGER NOT NULL,
	CREATED_BY VARCHAR(50) NOT NULL,
	CREATED_DATE DATETIME NOT NULL,
	MODIFIED_BY VARCHAR(50),
	MODIFIED_DATE DATETIME,
	PRIMARY KEY (MODULE_ID, LICENSE_ID, ROLE_ID)
);

CREATE TABLE LICENSEAUTH
(
	ID INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	NAME VARCHAR(250) NOT NULL,
	IS_DISABLED TINYINT NOT NULL,
	CREATED_BY VARCHAR(50) NOT NULL,
	CREATED_DATE DATETIME NOT NULL,
	MODIFIED_BY VARCHAR(50),
	MODIFIED_DATE DATETIME,
	PRIMARY KEY (ID)
);

CREATE TABLE LICENSEAUTH_MAPPING
(
	LICENSEAUTH_ID INTEGER NOT NULL,
	LICENSE_ID INTEGER NOT NULL,
	MODULE_ID INTEGER NOT NULL,
	CREATED_BY VARCHAR(50) NOT NULL,
	CREATED_DATE DATETIME NOT NULL,
	MODIFIED_BY VARCHAR(50),
	MODIFIED_DATE DATETIME,
	PRIMARY KEY (LICENSEAUTH_ID, LICENSE_ID, MODULE_ID)
);

CREATE TABLE LICENSEAUTH_PERMISSIONS
(
	LICENSEAUTH_ID INTEGER NOT NULL,
	PERMISSION_ID INTEGER NOT NULL,
	CREATED_BY VARCHAR(50) NOT NULL,
	CREATED_DATE DATETIME NOT NULL,
	MODIFIED_BY VARCHAR(50),
	MODIFIED_DATE DATETIME,
	PRIMARY KEY (LICENSEAUTH_ID, PERMISSION_ID)
);

CREATE TABLE AUDIT_RECORD
(
	ID INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	USER_ID VARCHAR(50) NOT NULL,
	IPORIGIN VARCHAR(50) NOT NULL,
	EVENT_TIMESTAMP DATETIME NOT NULL,
	EVENT_RISED VARCHAR(250) NOT NULL,
	ENTITY_CLASS VARCHAR(250) NOT NULL,
	ENTITY_ID VARCHAR(50) NOT NULL,
	EVENT_TYPE INTEGER,
	PROPERTY_NAME VARCHAR(50),
	PRIMARY KEY (ID)
);

CREATE TABLE TEAM
(
	ID INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	NAME VARCHAR(50) NOT NULL,
	CREATED_BY VARCHAR(50) NOT NULL,
	CREATED_DATE DATETIME NOT NULL,
	MODIFIED_BY VARCHAR(50),
	MODIFIED_DATE DATETIME
);

CREATE TABLE TESTCASE
(
	ID INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	NAME VARCHAR(50) NOT NULL,
	OWNER VARCHAR(50) NOT NULL,
	PRIORITY VARCHAR(50) NOT NULL,
	TYPE VARCHAR(50) NOT NULL,
	CREATED_BY VARCHAR(50) NOT NULL,
	CREATED_DATE DATETIME NOT NULL,
	MODIFIED_BY VARCHAR(50),
	MODIFIED_DATE DATETIME,
	PRIMARY KEY (ID)
);

CREATE TABLE TESTSUITE
(
	ID INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	NAME VARCHAR(50) NOT NULL,
	DESCRIPTION VARCHAR(50) NOT NULL,
	PROJECT_ID INTEGER NOT NULL,
	STATUS  INTEGER NOT NULL,
	START_TIME DATETIME,
	END_TIME DATETIME,
	CREATED_BY VARCHAR(50) NOT NULL,
	CREATED_DATE DATETIME NOT NULL,
	MODIFIED_BY VARCHAR(50),
	MODIFIED_DATE DATETIME,
	PRIMARY KEY (ID)
);

CREATE TABLE TASKEXECUTION
(
	TASKNAME VARCHAR(255) NOT NULL,
	TIME VARCHAR(255) NOT NULL,
	PRIMARY KEY (TASKNAME, TIME)
);

ALTER TABLE PROJECT_LICENSE ADD CONSTRAINT FK_PROJECT_LICENSE_PROJECTID FOREIGN KEY (PROJECT_ID) REFERENCES PROJECT (ID);
ALTER TABLE PROJECT_LICENSE ADD CONSTRAINT FK_PROJECT_LICENSE_AUTHID FOREIGN KEY (LICENSEAUTH_ID) REFERENCES LICENSEAUTH (ID);
ALTER TABLE PROJECT_TENANT ADD CONSTRAINT FK_PROJECT_TENANT_PROJECTID FOREIGN KEY (PROJECT_ID) REFERENCES PROJECT (ID);
-- ALTER TABLE PROJECT_TENANT ADD CONSTRAINT FK_PROJECT_TENANT_TENANTID FOREIGN KEY (TENANT_ID) REFERENCES TENANT (ID); --
ALTER TABLE USER_ROLE ADD CONSTRAINT FK_USER_ROLE_USERID FOREIGN KEY (USER_ID) REFERENCES USER (ID);
ALTER TABLE PROJECT_MODULE ADD CONSTRAINT FK_PROJECT_MODULE_PROJECTID FOREIGN KEY(PROJECT_ID) REFERENCES PROJECT (ID);
ALTER TABLE PROJECT_MODULE ADD CONSTRAINT FK_PROJECT_MODULE_MODULEID FOREIGN KEY(MODULE_ID) REFERENCES MODULE (ID);
ALTER TABLE USER_ROLE ADD CONSTRAINT FK_USER_ROLE_ROLEID FOREIGN KEY (ROLE_ID) REFERENCES ROLE (ID);
ALTER TABLE USER_PROJECT ADD CONSTRAINT FK_USER_PROJECT_USERID FOREIGN KEY (USER_ID) REFERENCES USER (ID);
ALTER TABLE USER_PROJECT ADD CONSTRAINT FK_USER_PROJECT_PROJECTID FOREIGN KEY (PROJECT_ID) REFERENCES PROJECT (ID);
ALTER TABLE USER_TENANT ADD CONSTRAINT FK_USER_TENANT_USERID FOREIGN KEY (USER_ID) REFERENCES USER (ID);
ALTER TABLE USER_TENANT ADD CONSTRAINT FK_USER_TENANT_TENANTID FOREIGN KEY (TENANT_ID) REFERENCES TENANT (ID);
ALTER TABLE USER_TEAM ADD CONSTRAINT FK_USER_TEAM_USERID FOREIGN KEY (USER_ID) REFERENCES USER (ID);
ALTER TABLE USER_TEAM ADD CONSTRAINT FK_USER_TEAM_TEAMID FOREIGN KEY (TEAM_ID) REFERENCES TEAM (ID);
ALTER TABLE PERMISSIONS ADD CONSTRAINT FK_PERMISSIONS_ROLEID FOREIGN KEY (ROLE_ID) REFERENCES ROLE (ID);
ALTER TABLE USER_PERMISSIONS ADD CONSTRAINT FK_USER_PERMISSIONS_USER_ID FOREIGN KEY (USER_ID) REFERENCES USER (ID);
ALTER TABLE USER_PERMISSIONS ADD CONSTRAINT FK_USER_PERMISSIONS_PERMISSION_ID FOREIGN KEY (PERMISSION_ID) REFERENCES PERMISSIONS (ID);
ALTER TABLE MODULE_LICENSE ADD CONSTRAINT FK_MODULE_LICENSE_MODULE_ID FOREIGN KEY (MODULE_ID) REFERENCES MODULE (ID);
ALTER TABLE MODULE_LICENSE ADD CONSTRAINT FK_MODULE_LICENSE_LICENSE_ID FOREIGN KEY (LICENSE_ID) REFERENCES LICENSE (ID);
ALTER TABLE MODULE_LICENSE ADD CONSTRAINT FK_MODULE_LICENSE_ROLE_ID FOREIGN KEY (ROLE_ID) REFERENCES ROLE(ID);
ALTER TABLE LICENSEAUTH_MAPPING ADD CONSTRAINT FK_LICENSEAUTH_LICENSE_AUTH_ID FOREIGN KEY (LICENSEAUTH_ID) REFERENCES LICENSEAUTH(ID);
ALTER TABLE LICENSEAUTH_MAPPING ADD CONSTRAINT FK_LICENSEAUTH_LICENSE_LICENSE_ID FOREIGN KEY (LICENSE_ID) REFERENCES LICENSE(ID);
ALTER TABLE LICENSEAUTH_MAPPING ADD CONSTRAINT FK_LICENSEAUTH_LICENSE_MODULE_ID FOREIGN KEY (MODULE_ID) REFERENCES MODULE(ID); --
ALTER TABLE LICENSEAUTH_PERMISSIONS ADD CONSTRAINT FK_LICENSEAUTH_PERMISSIONS_LICENSEAUTH_ID FOREIGN KEY (LICENSEAUTH_ID) REFERENCES LICENSEAUTH(ID);
ALTER TABLE LICENSEAUTH_PERMISSIONS ADD CONSTRAINT FK_LICENSEAUTH_PERMISSIONS_PERMISSION_ID FOREIGN KEY (PERMISSION_ID) REFERENCES PERMISSIONS(ID);
ALTER TABLE PROJECT_LICENSEAUTH ADD CONSTRAINT FK_PROJECT_LICENSEAUTH_PROJECTID FOREIGN KEY (PROJECT_ID) REFERENCES PROJECT(ID);
ALTER TABLE TEAM_PROJECT ADD CONSTRAINT FK_TEAM_PROJECT_TEAM_ID FOREIGN KEY (TEAM_ID) REFERENCES TEAM(ID);